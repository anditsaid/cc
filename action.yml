
inputs:
  submodules:
    description: 'init submodules, can be true or false'
    required: false
    default: true
runs:
  using: "composite"
  steps:
    - name: clean
      run: |
        echo "clean"
        for f in $(ls -A); do
          rm -rf $f
        done
      shell: bash
    - name: clone repo
      run: |
        git config --global --add safe.directory $(pwd)
        
        #echo "clone"
        git clone --quiet https://${{ github.token }}@github.com/${{ github.repository }} .
        
        ref_type=$(echo ${{ github.ref }} | sed -E -n -e 's/^refs\/([^/]*)\/.*$/\1/p')
        ref=$(echo ${{ github.ref }} | sed -E -n -e 's/^refs\/[^/]*\/(.*)$/\1/p')

        echo "ref = $ref"
        echo "ref_type = $ref_type"

        case $ref_type in
          pull)
            #echo "ref is a pull request, fetch it"
            git fetch origin +refs/pull/$ref:refs/remotes/origin/pull/$ref
            ref="origin/pull/$ref"
            ;;
          *)
            #echo "use commit sha as ref"
            ref=${{ github.sha }}
            ;;
        esac

        echo "checkout $ref"
        git checkout $ref

        if [ "${{ inputs.submodules }}" == "true" ] && [ -f ".gitmodules" ]; then
          #echo "clone submodules"
          sed -E -i -e $'s/^[ \t]*url[ \t]*=[ \t]*git@github.com:([^\/]*\/[^\/]*)[ \t]*$/\turl = https:\/\/${{ github.token }}@github.com\/\\1/g' .gitmodules
          git submodule init
          git submodule update --recursive
        fi
      shell: bash
